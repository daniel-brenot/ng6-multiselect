{"version":3,"file":"ng6-multiselect.js.map","sources":["ng://ng6-multiselect/lib/ng6-multiselect.component.ts","ng://ng6-multiselect/lib/ng6-multiselect.module.ts"],"sourcesContent":["import {Component, OnInit, Input, EventEmitter, Output, HostListener,OnChanges, SimpleChanges, SimpleChange, ChangeDetectorRef, DoCheck} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nconst noop = ()=>{};\n\n@Component({\n  selector: 'ng6-multiselect',\n  template: `<div onselectstart=\"return false\" class=\"multiselectElement\" (click)=\"onClicked($event)\" [ngClass]=\"{'multiselectFocus':this.focused}\">\n    <span style=\"margin-left:4px;\">\n        <span *ngIf=\"numSelected==0\">{{this.emptyTitle}}</span>\n        <span *ngIf=\"numSelected>0\">{{numSelected +\" \"+ this.selectedTitle}}</span>\n    </span>\n    <span class=\"rightArrow\">&#x25bc;</span>\n<div *ngIf=\"this.open\" (click)=\"$event.preventDefault();$event.stopPropagation();\" class=\"dropdown\">\n    <div class=\"multiselectRow\" (mouseenter)=\"setHover(item)\" (click)=\"selectItem(item)\" [ngClass]=\"{'hoverHighlight':hovered==item}\" *ngFor=\"let item of displayItems\">\n        <span *ngIf=\"item.type=='selectAll'\"><input type=\"checkbox\"/>Select All</span>\n        <span *ngIf=\"item.type=='deselectAll'\"><input type=\"checkbox\" checked/>UnSelect All</span>\n        <span *ngIf=\"item.type=='selectS'\"><input type=\"checkbox\"/>Select All {{item.group}}</span>\n        <span *ngIf=\"item.type=='deselectS'\"><input type=\"checkbox\" checked/>UnSelect All {{item.group}}</span>\n        <span *ngIf=\"item.type=='gname'\"><input [checked]=\"item.selected==true\" type=\"checkbox\"/><b>{{item.title}}</b></span>\n        <span *ngIf=\"item.type=='item'\" style=\"padding-left:20px\"><input [checked]=\"item.checked==true\" type=\"checkbox\"/>{{item.name}}</span>\n    </div>\n</div>\n</div>`,\n  styles: [`.multiselectElement{width:100%;height:20px;max-height:34px;border:1px solid #ccc;border-radius:4px;display:block;padding:6px 0;min-width:60px;font-size:14px;line-height:1.42857143;color:#555;cursor:default;transition:border-color .15s ease-in-out;background-color:#fff}.multiselectFocus{box-shadow:inset 0 1px 1px rgba(0,0,0,.075),0 0 8px rgba(102,175,233,.6);outline:0;border:1px solid #66afe9}.dropdown{position:relative;width:calc(100% + 2px);top:7px;left:-1px;z-index:2;box-shadow:0 1px 5px #959595;border:1px solid #ccc;background-color:#fff;min-height:20px;max-height:400px;overflow-y:auto}.rightArrow{color:#555;padding-right:0;font-size:10px;margin:4px 3px auto auto;float:right}.multiselectRow{padding-left:4px}.hoverHighlight{background-color:#cce8ff}input[type=checkbox]{margin-right:5px}`],\n  providers: [{provide:NG_VALUE_ACCESSOR,useExisting:Ng6MultiselectComponent,multi:true}]\n})\nexport class Ng6MultiselectComponent implements OnInit, DoCheck, ControlValueAccessor{\n\n    constructor(private cd: ChangeDetectorRef){}\n\n    //The title when the multiselect is empty\n    @Input()\n    emptyTitle: string=\"Select Items\";\n    \n    //The title when the multiselect has items. The displayed value will be:\n    //numSelected+selectedTitle\n    @Input()\n    selectedTitle: string=\"Item(s) Selected\";\n\n    //The binding for the selected data. Contains an array of the selected id's\n    @Input('ngModel')\n    data: Array<string>=[];\n\n    //The data to be displayed for selection. In the format of:\n    //[{\"id\":\"idToShowInData\",\"itemName\":\"nameToDisplay\",\"primaryGroup\":\"groupThisBelongsTo\",\"secondaryGroup\":\"aSecondaryGroupForSelection\"}]\n    //Note that when groups are put in, the select will generate a \"Select all $groupname\" \n    //and the corresponding deselect at the top, as well as put the items into group categories\n    @Input('data')\n    displayData: Array<any>=[];\n\n    displayDataOld: Array<any>=[];\n\n    //Triggered on any item getting selected or unselected\n    @Output('onSelectChange')\n    onSelectChange: EventEmitter<Array<string>> = new EventEmitter<Array<string>>();\n\n    //Triggered on an item getting selected\n    @Output('onSelect')\n    onSelect: EventEmitter<Array<string>> = new EventEmitter<Array<string>>();\n\n    //Triggered on a item getting unselected\n    @Output('onDeselect')\n    onDeselect: EventEmitter<Array<string>> = new EventEmitter<Array<string>>();\n\n\n    //Internal variables to be modified to influence the view\n    \n    //The list of items to show in the select\n    public displayItems: Array<any>=[];\n\n    //Primary groups and contents\n    private pgroups: any={};\n    //Secondary groups and contents\n    private sgroups: any={};\n    //Ungrouped items\n    private ungrouped: Array<any>=[];\n\n    //if the div is focused\n    public focused:boolean=false;\n    //if the div is open\n    public open:boolean=false;\n    //the currently hovered item\n    public hovered: any;\n\n    //The number from the list that are selected(has to be calculated since data can be shared between multiselects)\n    public numSelected=0;\n\n    ngOnInit(){\n        this.generateDisplayItems();\n    }\n\n    /**\n     * Generates the items to show in the multiselect\n     */\n    private generateDisplayItems():void{\n        this.pgroups={};\n        this.sgroups={};\n        this.ungrouped=[];\n        this.displayItems=[];\n        let all=[];\n        for(let i of this.displayData){\n            all.push({type:\"item\",id:i.id});\n        }\n        //Detects all the primary and secondary groups\n        for(let item of this.displayData){\n            if(item[\"primaryGroup\"]){this.addPGroup(item);}\n            else{this.addUngrouped(item);}\n            if(item[\"secondaryGroup\"])this.addSGroup(item);\n        }\n        //Adds the select all option\n        if(this.isGroupSelected(all)){\n            this.displayItems.push({type:\"deselectAll\"});\n        }else{\n            this.displayItems.push({type:\"selectAll\"});\n        }\n        \n        //Adds the select/deselect secondary group options\n        for(let key in this.sgroups){\n            if(this.isGroupSelected(this.sgroups[key])){\n                this.displayItems.push({type:\"deselectS\",\"group\":key});\n            }else{\n                this.displayItems.push({type:\"selectS\",\"group\":key});\n            }\n        }\n        //Adds the ungrouped items\n        for(let item of this.ungrouped){\n            this.displayItems.push({type:\"item\",\"id\":item.id,\"name\":item.itemName, checked:this.data.includes(item.id)});\n        }\n        //Lastly, adds the groups with items in them\n        for(let key in this.pgroups){\n            this.displayItems.push({type:\"gname\",title:key, selected:this.isGroupSelected(this.pgroups[key])});\n            for(let item of this.pgroups[key]){\n                this.displayItems.push({type:\"item\",id:item.id,name:item.itemName, checked:this.data.includes(item.id)});\n            }\n        }\n        //generate the number of display items selected\n        this.numSelected=0;\n        for(let i of this.displayData){\n            if(this.data.includes(i.id))this.numSelected++;\n        }\n    }\n\n    ngDoCheck(){\n      console.log(\"check\")\n      if(JSON.stringify(this.displayData)!==JSON.stringify(this.displayDataOld)){\n        Object.assign(this.displayDataOld,this.displayData);\n        this.cd.markForCheck();\n        this.generateDisplayItems();\n      }\n    }\n    //Loops through the array of item ids and checks if all of them are selected. If so, returns true, otherwise false\n    private isGroupSelected(items: any[]): boolean{\n        for(let item of items){\n            \n            if(!this.data.includes(item.id)){\n                return false;}\n        }\n        return true;\n    }\n\n    //Adds an item to the primary group list and adds its group if it dosn't exist\n    private addPGroup(item:any):void{\n        if(this.pgroups[item.primaryGroup]==null){\n            this.pgroups[item.primaryGroup]=[item];\n        }else{\n            this.pgroups[item.primaryGroup].push(item);\n        }\n    }\n\n    //Adds an item to the secondary group list and adds its group if it dosn't exist\n    private addSGroup(item:any):void{\n        if(this.sgroups[item.secondaryGroup]==null){\n            this.sgroups[item.secondaryGroup]=[item];\n        }else{\n            this.sgroups[item.secondaryGroup].push(item);\n        }\n    }\n\n    //Adds an item to the ungrouped list\n    private addUngrouped(item:any):void{\n        this.ungrouped.push(item);\n    }\n\n    //When the main box is clicked, this is triggered\n    public onClicked($event){\n        $event.preventDefault();\n        $event.stopPropagation();\n        this.focused=true;\n        this.open=!this.open;\n        this.hovered=this.displayItems[0] || null;\n    }\n\n    //Sets the current hovered item(used instead of css to keep the hover persistant)\n    setHover(item): void{\n        this.hovered=item;\n    }\n\n    //Selects the item in the data\n    selectItem(item: any): void{\n        if(item.type=='gname'){\n            if(item.selected==true){\n                //Loop through the items in the group\n                for(let groupItem of this.pgroups[item.title]){\n                    this.data.splice(this.data.indexOf(groupItem.id), 1)\n                }\n                this.onDeselect.emit(this.data);\n                this.onSelectChange.emit(this.data);\n            }\n            else{\n                for(let groupItem of this.pgroups[item.title]){\n                    if(!this.data.includes(groupItem.id)){\n                        this.data.push(groupItem.id);\n                    }\n                }\n                this.onSelect.emit(this.data);\n                this.onSelectChange.emit(this.data);\n            }\n        }else if(item.type=='selectS'){\n            for(let groupItem of this.sgroups[item.group]){\n                if(!this.data.includes(groupItem.id)){\n                    this.data.push(groupItem.id);\n                }\n            }\n            this.onSelect.emit(this.data);\n            this.onSelectChange.emit(this.data);\n        }else if(item.type=='deselectS'){\n            for(let groupItem of this.sgroups[item.group]){\n                this.data.splice(this.data.indexOf(groupItem.id), 1)\n            }\n            this.onDeselect.emit(this.data);\n            this.onSelectChange.emit(this.data);\n        }\n        else if(item.type==\"item\"){\n            if(item.checked){\n                this.data.splice(this.data.indexOf(item.id), 1)\n                this.onDeselect.emit(this.data);\n                this.onSelectChange.emit(this.data);\n            }\n            else{\n                this.data.push(item.id);\n                this.onSelect.emit(this.data);\n                this.onSelectChange.emit(this.data);\n            }\n        }\n        else if(item.type=='selectAll'){\n            this.data.splice(0,this.data.length);\n            for(let i of this.displayData){\n                this.data.push(i.id);\n            }\n            this.onSelectChange.emit(this.data);\n        }\n        else{\n            for(let i of this.displayData){\n                this.data.splice(this.data.indexOf(i.id), 1);\n            }\n            this.onSelectChange.emit(this.data);\n        }\n        \n\n        this.generateDisplayItems();\n    }\n    private onTouchedCallback: () => void = noop;\n    private onChangeCallback: (_:any) => void = noop;\n\n    get value(): any{\n        return this.data;\n    };\n\n    set value(value){\n        this.data=value;\n        this.onChangeCallback(value);\n    }\n\n    onBlur() {\n        this.onTouchedCallback();\n    }\n\n    writeValue(value:any): void{\n        this.data=value;\n    }\n\n    registerOnChange(fn:any): void{\n        this.onChangeCallback=fn;\n    }\n\n    registerOnTouched(fn:any): void{\n        this.onTouchedCallback=fn;\n    }\n\n    //Detects when the mouse clicks outside of this component\n    @HostListener('document:click',['$event']) clickedOutside($event){\n        if(!this.open){this.focused=false;}\n        this.open=false;\n        \n    }\n}","import { NgModule } from '@angular/core';\nimport { Ng6MultiselectComponent } from './ng6-multiselect.component';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    FormsModule\n  ],\n  declarations: [Ng6MultiselectComponent],\n  exports: [Ng6MultiselectComponent]\n})\nexport class Ng6MultiselectModule { }\n"],"names":[],"mappings":"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"}
